# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  name: Azure Pipelines
  demands: npm

#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Parameters.TestProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

steps:
- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: DGIvaylovgrad/ClientApp
    verbose: false

- task: Npm@1
  displayName: 'npm run build'
  inputs:
    command: custom
    workingDir: DGIvaylovgrad/ClientApp
    verbose: false
    customCommand: 'run build'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy:  dgivaylovgrad'
  inputs:
    azureSubscription: 'Free Trial (6c29e7dd-3deb-48b5-bb12-081a748d31a0)'
    WebAppName: dgivaylovgrad
    packageForLinux: '$(System.DefaultWorkingDirectory)\dgivaylovgrad\drop\s\build'

- task: AzureAppServiceManage@0
  displayName: 'Stop: DG '
  inputs:
    azureSubscription: 'Free Trial (6c29e7dd-3deb-48b5-bb12-081a748d31a0)'
    Action: 'Stop Azure App Service'
    WebAppName: DG

- task: AzureAppServiceManage@0
  displayName: 'Start: DG  '
  inputs:
    azureSubscription: 'Free Trial (6c29e7dd-3deb-48b5-bb12-081a748d31a0)'
    Action: 'Start Azure App Service'
    WebAppName: DG
    pool:
  name: Azure Pipelines
  demands: npm

#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘Parameters.RestoreBuildProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references an undefined variable named ‘Parameters.TestProjects’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build pipeline references the ‘BuildConfiguration’ variable, which you’ve selected to be settable at queue time. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971

steps:
- task: Npm@1
  displayName: 'npm install'
  inputs:
    workingDir: DGIvaylovgrad/ClientApp
    verbose: false

- task: Npm@1
  displayName: 'npm run build'
  inputs:
    command: custom
    workingDir: DGIvaylovgrad/ClientApp
    verbose: false
    customCommand: 'run build'

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy:  dgivaylovgrad'
  inputs:
    azureSubscription: 'Free Trial (6c29e7dd-3deb-48b5-bb12-081a748d31a0)'
    WebAppName: dgivaylovgrad
    packageForLinux: '$(System.DefaultWorkingDirectory)\dgivaylovgrad\drop\s\build'

- task: AzureAppServiceManage@0
  displayName: 'Stop: DG '
  inputs:
    azureSubscription: 'Free Trial (6c29e7dd-3deb-48b5-bb12-081a748d31a0)'
    Action: 'Stop Azure App Service'
    WebAppName: DG

- task: AzureAppServiceManage@0
  displayName: 'Start: DG  '
  inputs:
    azureSubscription: 'Free Trial (6c29e7dd-3deb-48b5-bb12-081a748d31a0)'
    Action: 'Start Azure App Service'
    WebAppName: DG

- task: PublishBuildArtifacts@1